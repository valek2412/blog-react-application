{"version":3,"sources":["components/Home.tsx","styles/typography.ts","components/PostListItem.tsx","redux/actions/postListAction.ts","redux/actionTypes/postListActionTypes.ts","components/PostForm.tsx","components/PostList.tsx","components/CommentForm.tsx","components/CommentList.tsx","redux/actions/postItemAction.ts","redux/actionTypes/postItemActionTypes.ts","components/PostScreen.tsx","App.tsx","styles/theme.tsx","styles/normalize.ts","styles/global.ts","redux/reducers/postListReducer.ts","redux/reducers/postItemReducer.ts","redux/reducers/rootReducer.ts","redux/configureStore.ts","index.tsx"],"names":["Home","to","H1","styled","h1","props","theme","fontWeights","bold","fontSizes","large","colors","black","Paragraph","h2","medium","h3","normal","small","p","Phrase","span","Link","tiny","primary","default","Wrapper","div","Header","Body","Footer","DeleteButton","button","PostListItem","id","title","body","handleDeleteClick","a","axios","delete","console","error","onClick","getAllPosts","dispatch","type","get","res","payload","data","Label","label","Input","input","Button","PostForm","useState","setTitle","setBody","handleClick","method","url","value","onChange","event","target","PostList","useDispatch","postListState","useSelector","state","postList","useEffect","loading","posts","map","item","key","CommentForm","postId","text","setText","CommentList","comments","getPostById","PostScreen","postItemState","postItem","useParams","post","App","exact","path","white","hover","active","disabled","light","gray","huge","media","mobile","desktop","Theme","children","css","createGlobalStyle","normalize","defaultState","getAllPostsReducer","action","getPostByIdReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44f7f4fe.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Home: React.FC = () => {\n  return <Redirect to=\"/posts\" />;\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const H1 = styled.h1`\n  font-weight: ${(props) => props.theme.fontWeights.bold};\n  font-size: ${(props) => props.theme.fontSizes.large};\n  color: ${(props) => props.theme.colors.black};\n`;\n\nexport const H2 = styled.h2`\n  font-weight: ${(props) => props.theme.fontWeights.medium};\n  font-size: ${(props) => props.theme.fontSizes.medium};\n  color: ${(props) => props.theme.colors.black};\n`;\n\nexport const H3 = styled.h3`\n  font-weight: ${(props) => props.theme.fontWeights.normal};\n  font-size: ${(props) => props.theme.fontSizes.small};\n  color: ${(props) => props.theme.colors.black};\n`;\n\nexport const Paragraph = styled.p`\n  font-weight: ${(props) => props.theme.fontWeights.normal};\n  font-size: ${(props) => props.theme.fontSizes.small};\n`;\n\nexport const Phrase = styled.span`\n  font-weight: ${(props) => props.theme.fontWeights.normal};\n  font-size: ${(props) => props.theme.fontSizes.small};\n`;\n\nexport const Anchor = styled(Link)`\n  font-weight: ${(props) => props.theme.fontWeights.normal};\n  font-size: ${(props) => props.theme.fontSizes.tiny};\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { H1, Paragraph } from '../styles/typography';\n\ntype Props = {\n  id: number;\n  title: string;\n  body: string;\n};\n\nconst Wrapper = styled.div``;\n\nconst Header = styled.div``;\n\nconst Body = styled.div``;\n\nconst Footer = styled.div``;\n\nconst DeleteButton = styled.button`\n  color: red;\n`;\n\n// eslint-disable-next-line react/prop-types\nconst PostListItem: React.FC<Props> = ({ id, title, body }) => {\n  const handleDeleteClick = async () => {\n    try {\n      await axios.delete(`https://bloggy-api.herokuapp.com/posts/${id}`);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return (\n    <Wrapper>\n      <Header>\n        <Link to={`/posts/${id}`}>\n          <H1>{title}</H1>\n        </Link>\n      </Header>\n      <Body>\n        <Paragraph>{body}</Paragraph>\n      </Body>\n      <Footer>\n        <DeleteButton onClick={handleDeleteClick}>DELETE</DeleteButton>\n      </Footer>\n      <hr />\n    </Wrapper>\n  );\n};\n\nexport default PostListItem;\n","import { Dispatch } from 'redux';\nimport axios from 'axios';\nimport {\n  POST_LIST_SUCCESS,\n  POST_LIST_LOADING,\n  POST_LIST_FAIL,\n  PostListDispatchTypes,\n} from '../actionTypes/postListActionTypes';\n\nconst getAllPosts = () => async (dispatch: Dispatch<PostListDispatchTypes>) => {\n  try {\n    dispatch({ type: POST_LIST_LOADING });\n\n    const res = await axios.get(`https://bloggy-api.herokuapp.com/posts`);\n\n    dispatch({ type: POST_LIST_SUCCESS, payload: res.data });\n  } catch (e) {\n    dispatch({ type: POST_LIST_FAIL });\n  }\n};\n\nexport default getAllPosts;\n","import { Post } from './postItemActionTypes';\n\nexport const POST_LIST_LOADING = 'POST_LIST_LOADING';\nexport const POST_LIST_FAIL = 'POST_LIST_FAIL';\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS';\n\nexport interface PostListLoading {\n  type: typeof POST_LIST_LOADING;\n}\n\nexport interface PostListFail {\n  type: typeof POST_LIST_FAIL;\n}\n\nexport interface PostListSuccess {\n  type: typeof POST_LIST_SUCCESS;\n  payload: Post[];\n}\n\nexport type PostListDispatchTypes = PostListLoading | PostListFail | PostListSuccess;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Wrapper = styled.div``;\n\nconst Label = styled.label``;\n\nconst Input = styled.input``;\n\nconst Button = styled.button``;\n\n// eslint-disable-next-line react/prop-types\nconst PostForm: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => setTitle(event.target.value);\n  const handleBodyChange = (event: React.ChangeEvent<HTMLInputElement>) => setBody(event.target.value);\n\n  const handleClick = async () => {\n    try {\n      await axios({\n        method: 'post',\n        url: 'https://bloggy-api.herokuapp.com/posts',\n        data: {\n          title,\n          body,\n        },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Label>\n        Title:\n        <Input type=\"text\" value={title} onChange={handleTitleChange} />\n      </Label>\n      <Label>\n        Body:\n        <Input type=\"text\" value={body} onChange={handleBodyChange} />\n      </Label>\n      <Button type=\"submit\" onClick={handleClick}>\n        ADD\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default PostForm;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport PostListItem from './PostListItem';\nimport { rootStore } from '../redux/configureStore';\nimport getAllPosts from '../redux/actions/postListAction';\n\nimport { H1 } from '../styles/typography';\nimport PostForm from './PostForm';\n\nconst Wrapper = styled.div`\n  margin: 2em;\n`;\n\nconst PostList: React.FC = () => {\n  const dispatch = useDispatch();\n  const postListState = useSelector((state: rootStore) => state.postList);\n\n  useEffect(() => {\n    dispatch(getAllPosts());\n  }, [dispatch]);\n\n  if (postListState.loading) return <h1>Loading</h1>;\n\n  return (\n    <Wrapper>\n      <H1>ADD POST</H1>\n      <PostForm />\n      <H1>POSTS</H1>\n      {postListState.posts.map((item) => (\n        <PostListItem key={item.id} id={item.id} title={item.title} body={item.body} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\ntype Props = {\n  postId: number;\n};\n\nconst Wrapper = styled.div``;\n\nconst Label = styled.label``;\n\nconst Input = styled.input``;\n\nconst Button = styled.button``;\n\n// eslint-disable-next-line react/prop-types\nconst CommentForm: React.FC<Props> = ({ postId }) => {\n  const [text, setText] = useState('');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => setText(event.target.value);\n\n  const handleClick = async () => {\n    try {\n      await axios({\n        method: 'post',\n        url: 'https://bloggy-api.herokuapp.com/comments',\n        data: {\n          postId,\n          body: text,\n        },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Label>\n        Add comment:\n        <Input type=\"text\" value={text} onChange={handleChange} />\n      </Label>\n      <Button type=\"submit\" onClick={handleClick}>\n        ADD\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { H1, Phrase } from '../styles/typography';\nimport { Comment } from '../redux/actionTypes/postItemActionTypes';\n\ntype Props = {\n  comments: Comment[];\n};\n\nconst Wrapper = styled.div``;\n\n// eslint-disable-next-line react/prop-types\nconst CommentList: React.FC<Props> = ({ comments }) => {\n  return (\n    <Wrapper>\n      <H1>Comments</H1>\n      {/* eslint-disable-next-line react/prop-types */}\n      {comments.map((item) => (\n        <Phrase>{item.body}</Phrase>\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default CommentList;\n","import { Dispatch } from 'redux';\nimport axios from 'axios';\nimport {\n  GET_POST_ITEM_SUCCESS,\n  GET_POST_ITEM_LOADING,\n  GET_POST_ITEM_FAIL,\n  GetPostItemDispatchTypes,\n} from '../actionTypes/postItemActionTypes';\n\nconst getPostById = (id: number) => async (dispatch: Dispatch<GetPostItemDispatchTypes>) => {\n  try {\n    dispatch({ type: GET_POST_ITEM_LOADING });\n\n    const res = await axios.get(`https://bloggy-api.herokuapp.com/posts/${id}?_embed=comments`);\n\n    dispatch({ type: GET_POST_ITEM_SUCCESS, payload: res.data });\n  } catch (e) {\n    dispatch({ type: GET_POST_ITEM_FAIL });\n  }\n};\n\nexport default getPostById;\n","export type Post = {\n  id: number;\n  title: string;\n  body: string;\n  comments?: Comment[];\n};\n\nexport type Comment = {\n  id: number;\n  postId?: number;\n  body?: string;\n};\n\nexport const GET_POST_ITEM_LOADING = 'GET_POST_ITEM_LOADING';\nexport const GET_POST_ITEM_FAIL = 'GET_POST_ITEM_FAIL';\nexport const GET_POST_ITEM_SUCCESS = 'GET_POST_ITEM_SUCCESS';\n\nexport interface GetPostItemLoading {\n  type: typeof GET_POST_ITEM_LOADING;\n}\n\nexport interface GetPostItemFail {\n  type: typeof GET_POST_ITEM_FAIL;\n}\n\nexport interface GetPostItemSuccess {\n  type: typeof GET_POST_ITEM_SUCCESS;\n  payload: Post;\n}\n\nexport type GetPostItemDispatchTypes = GetPostItemLoading | GetPostItemFail | GetPostItemSuccess;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport PostListItem from './PostListItem';\nimport CommentForm from './CommentForm';\nimport CommentList from './CommentList';\n\nimport { rootStore } from '../redux/configureStore';\n\nimport getPostById from '../redux/actions/postItemAction';\n\nconst Wrapper = styled.div``;\n\nconst PostScreen: React.FC = () => {\n  const dispatch = useDispatch();\n  const postItemState = useSelector((state: rootStore) => state.postItem);\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getPostById(id));\n  }, [dispatch, id]);\n\n  return (\n    <Wrapper>\n      <PostListItem id={postItemState.post.id} title={postItemState.post.title} body={postItemState.post.body} />\n      <CommentForm postId={postItemState.post.id} />\n      {postItemState.post.comments && <CommentList comments={postItemState.post.comments} />}\n    </Wrapper>\n  );\n};\n\nexport default PostScreen;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport PostList from './components/PostList';\nimport PostScreen from './components/PostScreen';\n\nconst App: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/posts\">\n        <PostList />\n      </Route>\n      <Route exact path=\"/posts/:id\">\n        <PostScreen />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nexport const theme = {\n  colors: {\n    white: '#FFF',\n    primary: {\n      default: '#EB7E44',\n      hover: '#F07132',\n      active: '#DD6221',\n      disabled: 'rgb(235, 126, 68, 0.7)',\n      light: 'rgb(235, 126, 68, 0.5)',\n    },\n    black: '#303030',\n    gray: {\n      default: 'rgba(48, 48, 48, 0.3)',\n      light: 'rgba(48, 48, 48, 0.1)',\n    },\n    error: '#FF2929',\n  },\n  fontSizes: {\n    tiny: '12px',\n    small: '14px',\n    medium: '16px',\n    large: '22px',\n    huge: '32px',\n  },\n  fontWeights: {\n    light: '300',\n    normal: '400',\n    medium: '500',\n    bold: '700',\n  },\n  media: {\n    mobile: 'max-width: 768px',\n    desktop: 'min-width: 769px',\n  },\n};\n\n// eslint-disable-next-line react/prop-types\nexport const Theme: React.FC<React.ReactNode> = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n","import { css } from 'styled-components';\n\nexport default css`\n  html {\n    line-height: 1.15;\n    -webkit-text-size-adjust: 100%;\n  }\n  body {\n    margin: 0;\n  }\n  main {\n    display: block;\n  }\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  hr {\n    box-sizing: content-box;\n    height: 0;\n    overflow: visible;\n  }\n  pre {\n    font-size: 1em;\n  }\n  a {\n    background-color: transparent;\n    text-decoration: none;\n  }\n  abbr[title] {\n    border-bottom: none;\n    text-decoration: underline dotted;\n  }\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  img {\n    border-style: none;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-size: 100%;\n    line-height: 1.15;\n    margin: 0;\n    outline: none;\n    padding: 0;\n    background: transparent;\n  }\n  button,\n  input {\n    overflow: visible;\n  }\n  button,\n  select {\n    text-transform: none;\n  }\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n    border: 0;\n    cursor: pointer;\n  }\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  legend {\n    box-sizing: border-box;\n    color: inherit;\n    display: table;\n    max-width: 100%;\n    padding: 0;\n    white-space: normal;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  textarea {\n    overflow: auto;\n  }\n  [type='checkbox'],\n  [type='radio'] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [type='search'] {\n    -webkit-appearance: textfield;\n    outline-offset: -2px;\n  }\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n  }\n  details {\n    display: block;\n  }\n  summary {\n    display: list-item;\n  }\n  template {\n    display: none;\n  }\n  [hidden] {\n    display: none;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nimport normalize from './normalize';\n\nexport default createGlobalStyle`\n  ${normalize}\n  \n  * { \n    box-sizing: border-box;\n  }\n  \n  html, body, body > div {\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import {\n  POST_LIST_FAIL,\n  POST_LIST_LOADING,\n  POST_LIST_SUCCESS,\n  PostListDispatchTypes,\n} from '../actionTypes/postListActionTypes';\nimport { Post } from '../actionTypes/postItemActionTypes';\n\ninterface DefaultStateI {\n  loading: boolean;\n  posts: Post[];\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n  posts: [],\n};\n\nconst getAllPostsReducer = (state: DefaultStateI = defaultState, action: PostListDispatchTypes): DefaultStateI => {\n  switch (action.type) {\n    case POST_LIST_FAIL:\n      return { ...state, loading: false };\n    case POST_LIST_LOADING:\n      return { ...state, loading: true };\n    case POST_LIST_SUCCESS:\n      return { ...state, loading: false, posts: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default getAllPostsReducer;\n","import {\n  GET_POST_ITEM_FAIL,\n  GET_POST_ITEM_LOADING,\n  GET_POST_ITEM_SUCCESS,\n  GetPostItemDispatchTypes,\n  Post,\n} from '../actionTypes/postItemActionTypes';\n\ninterface DefaultStateI {\n  loading: boolean;\n  post: Post;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n  post: {\n    id: 0,\n    title: '',\n    body: '',\n    comments: [],\n  },\n};\n\nconst getPostByIdReducer = (state: DefaultStateI = defaultState, action: GetPostItemDispatchTypes): DefaultStateI => {\n  switch (action.type) {\n    case GET_POST_ITEM_FAIL:\n      return { ...state, loading: false };\n    case GET_POST_ITEM_LOADING:\n      return { ...state, loading: true };\n    case GET_POST_ITEM_SUCCESS:\n      return { ...state, loading: false, post: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default getPostByIdReducer;\n","import { combineReducers } from 'redux';\nimport getAllPostsReducer from './postListReducer';\nimport getPostByIdReducer from './postItemReducer';\n\nconst rootReducer = combineReducers({\n  postList: getAllPostsReducer,\n  postItem: getPostByIdReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport type rootStore = ReturnType<typeof rootReducer>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nimport { Theme as ThemeProvider } from './styles/theme';\nimport GlobalStyle from './styles/global';\n\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider>\n      <GlobalStyle />\n      <Router>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}